/*
JS Document
◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇
◎ *@Description: javascript Obj 基类
◎ *@Author: 杨秀会™       yangxiuhui   YXH
◎ *@Update: 2016-10-14
◎ *@Contact: ☎：13588428549      Email: yangxiuhui_tsh@163.com   QQ：603141616
◎ *@AuthorNote: 请不要随便篡改文件内容。尊重他人劳动成果！谢谢...     杨秀会 注
◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇◆◇
*/
require(["react","react-dom","../js/listData","../js/common2","bootstrap","daterangepicker","common"], function(React, ReactDOM,ListData){
    $.tsh.popupBox({
        hand: '#btn-addchannel',
        box: '#addchannel',
        width: 620,
        callback: function(box){

        },
        okfn: function(hand,box){

            var checked = box.find(':radio:checked');
            if( checked.length ){
                $('#advertiseName').val( checked.closest('tr').find('td:eq(1)').text() );
                box.Hide();
            }else{
                alert( '请选择!' );
            }

        }
    });

    var dateInit = function(){
        var startEle = $('#startDate'), endEle = $('#endDate');
        startEle.dateRangePicker({
            separator: '至',
            getValue: function () {
                if (startEle.val() && endEle.val())
                    return startEle.val() + '至' + endEle.val();
                else
                    return '';
            },
            setValue: function (s, s1, s2) {
                startEle.val(s1);
                endEle.val(s2);
            }
        });
    }

    dateInit();
    var dateInit1 = function(){
        var ctx = "http://192.168.170.16:8415/mock/datePicker/";
        var pushEnd=[];
        var pushing=[];
        var pushReady=[];
        $.ajax({
            url: ctx + 'getPushing.json',
            type: 'get',
            data: '',
            async: false,
            cache: false,
            success: function(d){
                pushEnd = d.pushEnd;
                pushing = d.pushing;
                pushReady = d.pushReady;
            }
        });
        var dataArea = $('.dataArea2');
        dataArea.dateRangePicker({
            //startDate: new Date(),
            getValue: function () {
                if (dataArea.val())
                    return dataArea.val();
                else
                    return '';
            },
            setValue: function (s, s1) {
                dataArea.val(s1);
            },
            format: 'YYYY.MM.DD HH:mm:ss',
            time: {
                enabled: true
            },
            singleDate: true,
            container: '.dateWrap',
            inline:true,
            alwaysOpen:true,
            showDateFilter: function(time, date)
            {
                var newTime = new Date(time);
                var year = newTime.getFullYear();
                var month = newTime.getMonth();
                var day = newTime.getDay();

                return '<div class="lunarDate">\
                            <span style="font-weight:bold">'+date+'</span>\
                            <div style="opacity:0.3;">'+
                             LunarDate.GetLunarDay(new Date(time).getFullYear(),new Date(time).getMonth()+1,newTime.getDate())+
                             '</div>\
                             <span class="cornerTip"></span>\
                        </div>';
            },
            selectForward: true,
            beforeShowDay: function(t)
            {
                var dateFormat = t.Format("yyyy-MM-dd");
                var valid = t.getFullYear() + '-' + (t.getMonth() + 1) + '-' + t.getDate();  //disable saturday and sunday
                var _class;
                for(var i = 0; i < pushEnd.length; i++) {
                    var _tooltip = valid == pushEnd[i] ? 'sold out' : '';
                    if(valid == pushEnd[i]){
                        var _class = 'pushEnd';
                    }
                }
                for(var i = 0; i< pushing.length; i++ ){
                    if(valid == pushing[i]){
                        var _class = 'pushing';
                    }
                }
                for(var i = 0; i< pushReady.length; i++ ){
                    if(valid == pushReady[i]){
                        var _class = 'pushReady';
                    }
                }
                return [valid,_class];
            }
        });
    };
    dateInit1();
    addBtns();
    // var messageBox;
    // messageBox = renderWidget(React, ReactDOM, MessageBox, {
    //         grid: 0.35,
    //         type: "confirm",
    //         confirm: function () {
    //             showToast();
    //             //todo
    //             var role_id = messageBox.getData();
    //             deleteRole(role_id);
    //
    //             return true;
    //         }
    //     }, $("#messageBox")[0]);

        listeners();

        getLabels();

        // initFormValidate();

});

//----------------------
var LunarDate = {
    madd: new Array(0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334),
    HsString: '甲乙丙丁戊己庚辛壬癸',
    EbString: '子丑寅卯辰巳午未申酉戌亥',
    NumString: "一二三四五六七八九十",
    MonString: "正二三四五六七八九十冬腊",
    CalendarData: new Array(
        0xA4B, 0x5164B, 0x6A5, 0x6D4, 0x415B5, 0x2B6, 0x957, 0x2092F, 0x497,
        0x60C96, 0xD4A, 0xEA5, 0x50DA9, 0x5AD, 0x2B6, 0x3126E, 0x92E, 0x7192D,
        0xC95, 0xD4A, 0x61B4A, 0xB55, 0x56A, 0x4155B, 0x25D, 0x92D, 0x2192B,
        0xA95, 0x71695, 0x6CA, 0xB55, 0x50AB5, 0x4DA, 0xA5B, 0x30A57, 0x52B,
        0x8152A, 0xE95, 0x6AA, 0x615AA, 0xAB5, 0x4B6, 0x414AE, 0xA57, 0x526,
        0x31D26, 0xD95, 0x70B55, 0x56A, 0x96D, 0x5095D, 0x4AD, 0xA4D, 0x41A4D,
        0xD25, 0x81AA5, 0xB54, 0xB6A, 0x612DA, 0x95B, 0x49B, 0x41497, 0xA4B,
        0xA164B, 0x6A5, 0x6D4, 0x615B4, 0xAB6, 0x957, 0x5092F, 0x497, 0x64B,
        0x30D4A, 0xEA5, 0x80D65, 0x5AC, 0xAB6, 0x5126D, 0x92E, 0xC96, 0x41A95,
        0xD4A, 0xDA5, 0x20B55, 0x56A, 0x7155B, 0x25D, 0x92D, 0x5192B, 0xA95,
        0xB4A, 0x416AA, 0xAD5, 0x90AB5, 0x4BA, 0xA5B, 0x60A57, 0x52B, 0xA93, 0x40E95),
    Year: null,
    Month: null,
    Day: null,
    TheDate: null,
    GetBit: function(m, n) {
        return (m >> n) & 1;
    },
    e2c: function() {
        this.TheDate = (arguments.length != 3) ? new Date() : new Date(arguments[0], arguments[1], arguments[2]);
        var total, m, n, k;
        var isEnd = false;
        var tmp = this.TheDate.getFullYear();
        total = (tmp - 1921) * 365 + Math.floor((tmp - 1921) / 4) + this.madd[this.TheDate.getMonth()] + this.TheDate.getDate() - 38;
        if (this.TheDate.getYear() % 4 == 0 && this.TheDate.getMonth() > 1) {
            total++;
        }
        for (m = 0;; m++) {
            k = (this.CalendarData[m] < 0xfff) ? 11 : 12;
            for (n = k; n >= 0; n--) {
                if (total <= 29 + this.GetBit(this.CalendarData[m], n)) {
                    isEnd = true;
                    break;
                }
                total = total - 29 - this.GetBit(this.CalendarData[m], n);
            }
            if (isEnd) break;
        }
        this.Year = 1921 + m;
        this.Month = k - n + 1;
        this.Day = total;
        if (k == 12) {
            if (this.Month == Math.floor(this.CalendarData[m] / 0x10000) + 1) {
                this.Month = 1 - this.Month;
            }
            if (this.Month > Math.floor(this.CalendarData[m] / 0x10000) + 1) {
                this.Month--;
            }
        }
    },
    GetcDateString: function() {
        var tmp = "";
        // tmp += this.HsString.charAt((this.Year - 4) % 10);
        // tmp += this.EbString.charAt((this.Year - 4) % 12);
        // tmp += "年 ";
        // if (this.Month < 1) {
        //  tmp += "(闰)";
        //  tmp += this.MonString.charAt(-this.Month - 1);
        // } else {
        //  tmp += this.MonString.charAt(this.Month - 1);
        // }
        // tmp += "月";
        tmp += (this.Day < 11) ? "初" : ((this.Day < 20) ? "十" : ((this.Day < 30) ? "廿" : "三十"));
        if (this.Day % 10 != 0 || this.Day == 10) {
            tmp += this.NumString.charAt((this.Day - 1) % 10);
        }
        return tmp;
    },
    GetLunarDay: function(solarYear, solarMonth, solarDay) {
        if (solarYear < 1921 || solarYear > 2020) {
            return "";
        } else {
            solarMonth = (parseInt(solarMonth) > 0) ? (solarMonth - 1) : 11;
            this.e2c(solarYear, solarMonth, solarDay);
            return this.GetcDateString();
        }
    }
};
// window.onload = function() {
//  document.write('2016-10-29 ' + LunarDate.GetLunarDay(2016, 10, 29));
// };

function addBtns() {
    alert(123);
    $('.month-wrapper').append($('.pushArea'));
}
//-----------------------
function displayOtherConditions(show, text) {
        if(show){
            $(".condition-select").addClass("hidden");
            $(".condition-select").eq(0).removeClass("hidden");
        }else{
            $(".condition-select").addClass("hidden");
        }
    }

    function init(){
        $(".filter-select li a").on("click", function(){
            if($(this).text() != "请选择"){
                displayOtherConditions(true);
            }else{
                displayOtherConditions(false);
            }
        });

        $(".UPload").change(function(){
            var filePath = $(this).val();
            var index = filePath.lastIndexOf("\\");
            var filename = filePath.substr(index+1);
            $(this).prev("input").val(filename);

            if(checkFileType($(this))){
                preview(this);
            }
        });
    }
function addTagToSelectedArea(parent){
    var tagValue = $("input", parent).eq(0).val();
    if(tagValue) {
        var key = parent.data("key");
        var target = $(".strategy_item[data-target='" + key + "']");
        var selectedArea = $("#selected_area");
        var tagName = parent.parents("tr").children("td").eq(0).html();
        var tagText = $(".btn", parent).eq(0).html();
        if (!target.length) {
            target = $('<span class="strategy_item" data-target="' + key + '"><span class="label-text"></span><span class="ml-10 close-btn fa fa-times-circle"></span></span>');
            selectedArea.append(target);
        }
        target.children(".label-text").html(tagName + ": " + tagText);
        target.data("value", tagValue);
    }
}

/**
 *
 */
function removeTagFromSelectedArea(parent){
    var key = parent.data("key");
    var target = $(".strategy_item[data-target='" + key + "']");
    target.remove();
}

function listeners(){
    $("#selected_area").on("click", ".close-btn", function(){
        var ele = $(this).parent();
        var key = ele.data("target");
        ele.remove();
        var target = $(".btn-group[data-key='"+key+"']");
        $("input", target).val("");
        $(".btn", target).eq(0).html("不限");
    });

}

var ctx = "http://192.168.170.16:8415/mock/marketingweb/";
function getLabels(){
    ajaxData(ctx+"/getLabels.json", {}, function(data){
        renderTabs(data);
    });
}

function renderTabs(data){
    if(!data){
        return;
    }

    var header_ele = $("#category_label_list");
    var panels = $("#category_panels");
    data.forEach(function(category, index){
        var li = $('<li role="presentation"><a href="#'+category.categoryKey+'" role="tab" data-toggle="tab">'+category.categoryName+'</a></li>');
        li.data("category", category);
        header_ele.append(li);

        var panel = $('<div role="tabpanel" class="tab-pane" id="'+category.categoryKey+'"></div>');
        panels.append(panel);

        if(index === 0){
            li.addClass("active");
            panel.addClass("active");
        }

        renderCategory(category, panel);
    });
}

function renderCategory(category, panel){
    panel.append('<table class="table text-center" style="border: 1px solid #ddd; border-top: 0 solid #ddd;">'+
        '<thead>'+
        '<tr>'+
        '<th class="text-center">标签名称</th>'+
        '<th class="text-center">范围筛选</th>'+
        '</tr>'+
        '</thead>'+
        '<tbody>'+
        '</tbody>'+
        '</table>');

    var body = $("tbody", panel);
    var labelViewList = category.labelViewList;
    labelViewList.forEach(function(label){
        renderLabel(label, body);
    });
}

function renderLabel(label, body){
    var tr = $('<tr><td>'+label.labelName+'</td><td></td></tr>');
    body.append(tr);

    renderOptions(label, $("td", tr).eq(1));
}

function renderOptions(label, parent){
    if(label.single){
        renderSingleSelect(label, parent);
    }else{
        renderMultiSelect(label, parent);
    }
}

/**
 *
 * @param label
 * @param parent
 */
function renderSingleSelect(label, parent){
    parent.append('<div class="btn-group btn-group-sm" data-key="'+label.labelKey+'">'+
        '<input name="'+label.labelKey+'" style="width: 0; height: 0;padding: 0; opacity: 0;">'+
        '<button type="button" class="btn btn-default btn-select">不限</button>'+
        '<button type="button" class="btn btn-default dropdown-toggle btn-select-color" data-toggle="dropdown"'+
        ' aria-haspopup="true" aria-expanded="false">'+
        '<span class="caret"></span>'+
        '<span class="sr-only">Toggle Dropdown</span>'+
        '</button>'+
        '<ul class="dropdown-menu">'+
        '</ul>'+
        '</div>');

    var ul = $(".dropdown-menu", parent);
    $('.dropdown-toggle', parent).dropdown();
    dropdownListener(parent);
    label.options.forEach(function(option){
        ul.append('<li data-value="'+option.key+'"><a href="#">'+option.value+'</a></li>');
    });
}

function renderMultiSelect(label, parent){
    parent.append('<div class="btn-group btn-group-sm" data-key="'+label.labelKey+'">'+
        '<input name="'+label.labelKey+'" style="width: 0; height: 0;padding: 0; opacity: 0;">'+
        '<button type="button" class="btn btn-default btn-select">不限</button>'+
        '<button type="button" class="btn btn-default dropdown-toggle btn-select-color" data-toggle="dropdown" '+
        ' aria-haspopup="true" aria-expanded="false">'+
        '<span class="caret"></span>'+
        '<span class="sr-only">Toggle Dropdown</span>'+
        '</button>'+
        '<ul class="dropdown-menu exept multiselect">' +
        '</ul>' +
        '</div>');

    var ul = $(".dropdown-menu", parent);
    $('.dropdown-toggle', parent).dropdown();
    label.options.forEach(function(option, index){
        ul.append('<li data-value=""><a href="#">'+
            '<span class="input-checkbox">'+
            '<input type="checkbox" name="'+label.labelKey+'_option" id="'+label.labelKey+'_'+option.key+'">'+
            '<label class="c-checkbox" for="'+label.labelKey+'_'+option.key+'"></label>'+
            '<span class="ml-10 check-text">'+option.value+'</span>'+
            '</span></a>'+
            '</li>');
    });
    dropdownListener(parent);
}

/**
 *
 * @param parentEle
 */
function dropdownListener(parentEle){
    $(".dropdown-menu:not(.exept)", parentEle).on("click", "a",function(){
        if(!$(this).parent().hasClass("disabled")) {
            var parent = $(this).parents(".btn-group");
            $(".btn", parent).eq(0).html($(this).html());
            $("input", parent).eq(0).val($(this).parent().data("value"));
            $("input", parent).eq(0).blur();
        }
    });

    $(".dropdown-menu.multiselect a", parentEle).on("click", function(e){
        e.preventDefault();
        e.stopPropagation();

        var input = $(this).find(".input-checkbox").children("input");
        var ischecked = input.is(":checked");
        if(ischecked){
            input.prop("checked", false);
        }else{
            input.prop("checked", true);
        }
    });

    $(".dropdown-menu:not('.exept')", parentEle).parent().on('hide.bs.dropdown', function () {
        addTagToSelectedArea($(this));
    });

    $(".dropdown-menu.multiselect", parentEle).parent().on('hide.bs.dropdown', function () {
        var checked_inputs = $(this).find(".input-checkbox input:checked");

        var rets = [];
        var value = [];
        checked_inputs.each(function(){
            rets.push($(this).parent().find(".check-text").html());
            value.push($(this).val());
        });
        if(rets.length) {
            $(this).find(".btn").eq(0).html(rets.join("、"));
            $(this).children("input").eq(0).val(value.join(","));
            addTagToSelectedArea($(this));
        }else{
            $(this).find(".btn").eq(0).html("不限");
            $(this).children("input").eq(0).val("");
            removeTagFromSelectedArea($(this));
        }
    });
}